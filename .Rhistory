labs(title = "Internet Quality vs. Exam Score", x = "Internet Quality", y = "Exam Score")
ggplot(student_data, aes(x = internet_quality, y = exam_score, fill = internet_quality)) +
geom_boxplot() +
labs(title = "Internet Quality vs. Exam Score", x = "Internet Quality", y = "Exam Score")
ggplot(student_data, aes(x = extracurricular_participation, y = exam_score, fill = extracurricular_participation)) +
geom_boxplot() +
labs(title = "Extracurricular Participation vs. Exam Score", x = "Extracurricular Participation", y = "Exam Score")
ggplot(student_data, aes(x = part_time_job, y = exam_score, fill = part_time_job)) +
geom_boxplot() +
labs(title = "Part-Time Job vs. Exam Score", x = "Part-Time Job", y = "Exam Score")
ggplot(student_data, aes(x = diet_quality, y = attendance_percentage, fill = diet_quality)) +
geom_boxplot() +
labs(title = "Attendance Percentage by Diet Quality", x = "Diet Quality", y = "Attendance Percentage")
ggplot(student_data, aes(x = study_hours_per_day, y = exam_score, color = gender)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", se = FALSE) +
facet_wrap(~parental_education_level) +
labs(title = "Study Hours vs. Exam Score by Parental Education",
x = "Study Hours per Day", y = "Exam Score") +
theme_minimal()
library(ggridges)
ggplot(student_data, aes(x = exam_score, y = as.factor(mental_health_rating), fill = stat(x))) +
geom_density_ridges_gradient(scale = 0.9) +
scale_fill_viridis_c(name = "Exam Score") +
labs(title = "Distribution of Exam Scores by Mental Health Rating",
x = "Exam Score", y = "Mental Health Rating (1-10)") +
theme_minimal()
library(plotly)
p <- ggplot(student_data, aes(x = study_hours_per_day, y = social_media_hours,
size = exam_score, color = gender)) +
geom_point(alpha = 0.7) +
scale_size(range = c(1, 10)) +
labs(title = "Study Hours vs. Social Media Hours (Size = Exam Score)",
x = "Study Hours", y = "Social Media Hours") +
theme_minimal()
ggplotly(p)
ggplot(student_data, aes(x = diet_quality, y = exam_score, fill = extracurricular_participation)) +
geom_violin(alpha = 0.7, trim = FALSE) +
labs(title = "Exam Scores by Diet Quality and Extracurricular Participation",
x = "Diet Quality", y = "Exam Score") +
scale_fill_brewer(palette = "Set2") +
theme_minimal()
student_data <- student_data %>%
mutate(score_bin = cut(exam_score, breaks = c(0, 50, 70, 85, 100)))
ggplot(student_data, aes(x = gender, fill = score_bin)) +
geom_bar(position = "fill") +
facet_wrap(~part_time_job) +
labs(title = "Proportion of Exam Score Bins by Gender and Part-Time Job",
x = "Gender", y = "Proportion") +
scale_fill_viridis_d(name = "Exam Score Bin") +
theme_minimal()
library(ggcorrplot)
cor_matrix <- cor(student_data %>% select(study_hours_per_day, social_media_hours,
sleep_hours, attendance_percentage, exam_score),
use = "complete.obs")
ggcorrplot(cor_matrix, hc.order = TRUE, lab = TRUE) +
labs(title = "Correlation Network of Key Variables") +
theme_minimal()
library(patchwork)
p1 <- ggplot(student_data, aes(x = study_hours_per_day, y = exam_score)) +
geom_point() + labs(title = "Study Hours vs. Score")
p2 <- ggplot(student_data, aes(x = sleep_hours, y = exam_score)) +
geom_point() + labs(title = "Sleep Hours vs. Score")
p3 <- ggplot(student_data, aes(x = social_media_hours, y = exam_score)) +
geom_point() + labs(title = "Social Media vs. Score")
(p1 + p2) / p3
ggplot(student_data, aes(x = social_media_hours, y = study_hours_per_day)) +
geom_point(alpha = 0.6, color = "steelblue") +
geom_smooth(method = "lm", color = "red", se = FALSE) +  # Linear regression line
labs(
title = "Study Hours vs. Social Media Hours",
subtitle = "Negative relationship: More social media use correlates with fewer study hours",
x = "Social Media Hours per Day",
y = "Study Hours per Day"
) +
theme_minimal() +
theme(plot.title = element_text(face = "bold"))
install.packages("ggpubr")
library(ggpubr)
# Calculate correlation
cor_test <- cor.test(student_data$study_hours_per_day, student_data$social_media_hours)
# Correlation plot
ggscatter(
student_data,
x = "social_media_hours",
y = "study_hours_per_day",
add = "reg.line",                         # Add regression line
conf.int = TRUE,                          # Add confidence interval
cor.coef = TRUE,                          # Show correlation coefficient
cor.method = "pearson",                   # Pearson's r
color = "dodgerblue4",
alpha = 0.6
) +
labs(
title = paste("Correlation: r =", round(cor_test$estimate, 2)),
subtitle = paste("p-value:", format.pval(cor_test$p.value, digits = 2)),
x = "Social Media Hours per Day",
y = "Study Hours per Day"
) +
theme_minimal()
library(ggplot2)
library(dplyr)
# Bin sleep hours into "Low" (<6h), "Medium" (6-8h), "High" (>8h)
student_data <- student_data %>%
mutate(sleep_quality = case_when(
sleep_hours < 6 ~ "Low",
sleep_hours >= 6 & sleep_hours <= 8 ~ "Medium",
sleep_hours > 8 ~ "High"
))
# Scatterplot with faceted sleep quality
ggplot(student_data, aes(x = study_hours_per_day, y = exam_score, color = sleep_quality)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", se = FALSE) +  # Add linear trendlines
facet_wrap(~sleep_quality) +
labs(
title = "Study Hours vs. Exam Score: Sleep Quality as a Moderator",
subtitle = "High sleep quality amplifies the benefits of studying",
x = "Study Hours per Day",
y = "Exam Score",
color = "Sleep Quality"
) +
scale_color_manual(values = c("Low" = "#ff6b6b", "Medium" = "#ffd166", "High" = "#06d6a0")) +
theme_minimal() +
theme(legend.position = "none")  # Remove legend (redundant with facets)
library(interactions)
install.pacakges("interactions")
install.packages("interactions")
library(interactions)
# Fit interaction model
model <- lm(exam_score ~ study_hours_per_day * sleep_quality, data = student_data)
# Plot with custom slopes
interact_plot(model, pred = "study_hours_per_day", modx = "sleep_quality") +
geom_text(
data = slopes,
aes(x = 6, y = 70, label = label),  # Adjust position as needed
color = "black", size = 4, fontface = "bold"
) +
labs(
title = "Interaction Effect: Study Hours × Sleep Quality",
subtitle = "Slopes quantify how sleep quality changes study effectiveness",
x = "Study Hours per Day",
y = "Predicted Exam Score",
color = "Sleep Quality"
) +
theme_minimal()
library(ggplot2)
library(dplyr)
# Calculate slopes for each sleep group
slopes <- student_data %>%
group_by(sleep_quality) %>%
summarise(
slope = round(coef(lm(exam_score ~ study_hours_per_day))[2], 2),
label = paste("Slope =", slope)
)
# Plot with slope annotations
ggplot(student_data, aes(x = study_hours_per_day, y = exam_score, color = sleep_quality)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", se = FALSE) +
geom_text(
data = slopes,
aes(x = 5, y = 100, label = label),  # Position labels at (5, 100)
color = "black", size = 4, fontface = "bold"
) +
facet_wrap(~sleep_quality) +
labs(
title = "Study Hours vs. Exam Score: Slope by Sleep Quality",
subtitle = "High sleep quality amplifies the benefit of each study hour",
x = "Study Hours per Day",
y = "Exam Score"
) +
scale_color_manual(values = c("Low" = "#ff6b6b", "Medium" = "#ffd166", "High" = "#06d6a0")) +
theme_minimal()
library(interactions)
# Fit interaction model
model <- lm(exam_score ~ study_hours_per_day * sleep_quality, data = student_data)
# Plot with custom slopes
interact_plot(model, pred = "study_hours_per_day", modx = "sleep_quality") +
geom_text(
data = slopes,
aes(x = 6, y = 70, label = label),  # Adjust position as needed
color = "black", size = 4, fontface = "bold"
) +
labs(
title = "Interaction Effect: Study Hours × Sleep Quality",
subtitle = "Slopes quantify how sleep quality changes study effectiveness",
x = "Study Hours per Day",
y = "Predicted Exam Score",
color = "Sleep Quality"
) +
theme_minimal()
library(interactions)
# Fit interaction model
model <- lm(exam_score ~ study_hours_per_day * sleep_quality, data = student_data)
# Plot with custom slopes
interact_plot(model, pred = "study_hours_per_day", modx = "sleep_quality") +
geom_text(
data = slopes,
aes(x = 6, y = 70, label = label),  # Adjust position as needed
color = "black", size = 4, fontface = "bold"
) +
labs(
title = "Interaction Effect: Study Hours × Sleep Quality",
subtitle = "Slopes quantify how sleep quality changes study effectiveness",
x = "Study Hours per Day",
y = "Predicted Exam Score",
color = "Sleep Quality"
) +
theme_minimal()
library(ggpubr)
# Fit a linear model
model <- lm(exam_score ~ study_hours_per_day, data = student_data)
slope <- round(coef(model)[2], 2)
r_squared <- round(summary(model)$r.squared, 2)
# Plot with slope/R² in subtitle
ggscatter(
student_data,
x = "study_hours_per_day",
y = "exam_score",
add = "reg.line",
conf.int = TRUE,
cor.coef = TRUE,
cor.method = "pearson",
color = "dodgerblue4",
alpha = 0.6
) +
labs(
title = "Study Hours vs. Exam Score",
subtitle = paste("Slope =", slope, "| R² =", r_squared),
x = "Study Hours per Day",
y = "Exam Score"
) +
theme_minimal()
library(interactions)
# Fit interaction model
model <- lm(exam_score ~ study_hours_per_day * sleep_quality, data = student_data)
# Plot with custom slopes
interact_plot(model, pred = "study_hours_per_day", modx = "sleep_quality") +
geom_text(
data = slopes,
aes(x = 6, y = 70, label = label),  # Adjust position as needed
color = "black", size = 4, fontface = "bold"
) +
labs(
title = "Interaction Effect: Study Hours × Sleep Quality",
subtitle = "Slopes quantify how sleep quality changes study effectiveness",
x = "Study Hours per Day",
y = "Predicted Exam Score",
color = "Sleep Quality"
) +
theme_minimal()
help("theme")
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
library(tidyverse)
library(plotly)
library(janitor)
library(GGally)
library(viridis)
ggplot(data, aes(x = study_hours_per_day, y = exam_score)) +
geom_point(color = "#1f78b4", alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE, color = "#ff7f00") +
labs(title = "More Studying, Better Scores?", x = "Study Hours", y = "Exam Score") +
theme_minimal()
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
library(tidyverse)
library(plotly)
library(janitor)
library(GGally)
library(viridis)
data <- read_csv("student_habits_performance.csv") %>%
clean_names()
data <- data %>%
mutate(score_tier = case_when(
exam_score >= 90 ~ "High",
exam_score >= 75 ~ "Medium",
TRUE ~ "Low"
))
ggplot(data, aes(x = exam_score)) +
geom_histogram(fill = "#1f78b4", color = "white", bins = 20) +
labs(title = "Distribution of Exam Scores", x = "Exam Score", y = "Count") +
theme_minimal()
ggplot(data, aes(x = study_hours_per_day, y = exam_score)) +
geom_point(color = "#1f78b4", alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE, color = "#ff7f00") +
labs(title = "More Studying, Better Scores?", x = "Study Hours", y = "Exam Score") +
theme_minimal()
ggplot(data, aes(x = sleep_hours, y = exam_score)) +
geom_point(color = "#33a02c", alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE, color = "#ff7f00") +
labs(title = "Sleep and Exam Performance", x = "Sleep Hours", y = "Exam Score") +
theme_minimal()
p <- ggplot(data, aes(x = study_hours_per_day, y = sleep_hours, color = exam_score, text = paste("Score:", exam_score))) +
geom_point(size = 3) +
scale_color_viridis_c(option = "D") +
labs(title = "Interactive: Study & Sleep vs. Score", x = "Study Hours", y = "Sleep Hours") +
theme_minimal()
ggplotly(p, tooltip = "text")
ggplot(data, aes(x = social_media_hours, y = exam_score)) +
geom_point(color = "#984ea3", alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE, color = "#ff7f00") +
labs(title = "Social Media Time vs. Exam Score", x = "Social Media Hours", y = "Exam Score") +
theme_minimal()
ggplot(data, aes(x = social_media_hours, y = study_hours_per_day)) +
geom_point(color = "#4daf4a", alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE, color = "#ff7f00") +
labs(title = "Social Media and Study Time", x = "Social Media Hours", y = "Study Hours") +
theme_minimal()
ggplot(data, aes(x = exercise_frequency, y = exam_score)) +
geom_jitter(width = 0.3, color = "#1b9e77", alpha = 0.7, size = 2) +
geom_smooth(method = "lm", se = FALSE, color = "#e31a1c") +
labs(title = "Exam Scores by Exercise Frequency", x = "Exercise Days/Week", y = "Exam Score") +
theme_minimal()
ggplot(data, aes(x = extracurricular_participation, y = exam_score, fill = extracurricular_participation)) +
geom_boxplot(alpha = 0.7) +
scale_fill_manual(values = c("yes" = "#1f78b4", "no" = "#e31a1c")) +
labs(
title = "Exam Scores by Extracurricular Participation",
x = "Participates in Extracurriculars",
y = "Exam Score",
fill = "Participation"
) +
theme_minimal()
ggcorr(data %>% select(study_hours_per_day, sleep_hours, social_media_hours, exercise_frequency, exam_score), label = TRUE) +
ggtitle("Correlation Between Variables")
ggplot(data, aes(x = social_media_hours, y = exam_score)) +
geom_point(color = "yellow", alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE, color = "#ff7f00") +
labs(title = "Social Media Time vs. Exam Score", x = "Social Media Hours", y = "Exam Score") +
theme_minimal()
ggplot(data, aes(x = social_media_hours, y = exam_score)) +
geom_point(color = "#D5B60A", alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE, color = "#ff7f00") +
labs(title = "Social Media Time vs. Exam Score", x = "Social Media Hours", y = "Exam Score") +
theme_minimal()
ggplot(data, aes(x = exercise_frequency, y = exam_score)) +
geom_jitter(width = 0.3, color = "#1b9e77", alpha = 0.7, size = 2) +
geom_smooth(method = "lm", se = FALSE, color = "#ff7f00") +
labs(title = "Exam Scores by Exercise Frequency", x = "Exercise Days/Week", y = "Exam Score") +
theme_minimal()
ggplot(data, aes(x = exercise_frequency, y = exam_score)) +
geom_jitter(width = 0.3, color = "#1b9e77", alpha = 0.7, size = 2) +
geom_smooth(method = "lm", se = FALSE, color = "#ff7f00") +
labs(title = "Exam Scores by Exercise Frequency", x = "Exercise Days per Week", y = "Exam Score") +
theme_minimal()
ggplot(data, aes(x = exercise_frequency, y = exam_score)) +
geom_jitter(width = 0.3, color = "#1b9e77", alpha = 0.7, size = 2) +
geom_smooth(method = "lm", se = FALSE, color = "#ff7f00") +
scale_x_continuous(breaks = 1:6) +
labs(title = "Exam Scores by Exercise Frequency",
x = "Exercise Days per Week",
y = "Exam Score") +
theme_minimal()
ggplot(data, aes(x = extracurricular_participation, y = exam_score,
fill = extracurricular_participation,
color = extracurricular_participation)) +
geom_boxplot(alpha = 0.7) +
scale_fill_manual(values = c("yes" = "#1f78b4", "no" = "#e31a1c")) +
scale_color_manual(values = c("yes" = "#084594", "no" = "#99000d")) +
labs(
title = "Exam Scores by Extracurricular Participation",
x = "Participates in Extracurriculars",
y = "Exam Score",
fill = "Participation",
color = "Participation"
) +
theme_minimal()
ggplot(data, aes(x = extracurricular_participation, y = exam_score, fill = extracurricular_participation)) +
geom_boxplot(alpha = 0.7) +
scale_fill_manual(values = c("Yes" = "#1f78b4", "No" = "#e31a1c")) +
labs(
title = "Exam Scores by Extracurricular Participation",
x = "Participates in Extracurriculars",
y = "Exam Score",
fill = "Participation"
) +
theme_minimal()
ggplot(data, aes(x = extracurricular_participation, y = exam_score, fill = extracurricular_participation)) +
geom_boxplot(alpha = 0.7) +
scale_fill_manual(values = c("Yes" = "#ff7f00", "No" = "#D5B60A")) +
labs(
title = "Exam Scores by Extracurricular Participation",
x = "Participates in Extracurriculars",
y = "Exam Score",
fill = "Participation"
) +
theme_minimal()
ggplot(data, aes(x = extracurricular_participation, y = exam_score, fill = extracurricular_participation)) +
geom_boxplot(alpha = 0.7) +
scale_fill_manual(values = c("Yes" = "#ff7f00", "No" = "#1b9e77")) +
labs(
title = "Exam Scores by Extracurricular Participation",
x = "Participates in Extracurriculars",
y = "Exam Score",
fill = "Participation"
) +
theme_minimal()
ggcorr(
data %>% select(study_hours_per_day, sleep_hours, social_media_hours, exercise_frequency, exam_score),
label = TRUE,
label_size = 4,
low = "#e66101",     # orange for negative correlation
mid = "#f7f7f7",     # neutral color
high = "#1b9e77",    # green for positive correlation
midpoint = 0
) +
ggtitle("Correlation Between Variables") +
theme_minimal()
p <- ggplot(data, aes(x = study_hours_per_day, y = sleep_hours,
color = exam_score,
text = paste("Score:", exam_score))) +
geom_point(size = 3) +
scale_color_gradient(
low = "#1b9e77",  # green
high = "#ff7f00"  # orange
) +
labs(
title = "Interactive: Study & Sleep vs. Score",
x = "Study Hours",
y = "Sleep Hours"
) +
theme_minimal()
ggplotly(p, tooltip = "text")
p <- ggplot(data, aes(x = study_hours_per_day, y = sleep_hours,
color = exam_score,
text = paste("Score:", exam_score))) +
geom_point(size = 3) +
scale_color_gradient(
low = "#1f78b4",  # green
high = "#ff7f00"  # orange
) +
labs(
title = "Interactive: Study & Sleep vs. Score",
x = "Study Hours",
y = "Sleep Hours"
) +
theme_minimal()
ggplotly(p, tooltip = "text")
p <- ggplot(data, aes(x = study_hours_per_day, y = sleep_hours,
color = exam_score,
text = paste("Score:", exam_score))) +
geom_point(size = 3) +
scale_color_gradient(
low = "#1f78b4",
mid = "yellow",# green
high = "#ff7f00"  # orange
) +
labs(
title = "Interactive: Study & Sleep vs. Score",
x = "Study Hours",
y = "Sleep Hours"
) +
theme_minimal()
p <- ggplot(data, aes(x = study_hours_per_day, y = sleep_hours,
color = exam_score,
text = paste("Score:", exam_score))) +
geom_point(size = 3) +
scale_color_gradient(
low = "#1f78b4",  # green
high = "#ff7f00"  # orange
) +
labs(
title = "Interactive: Study & Sleep vs. Score",
x = "Study Hours",
y = "Sleep Hours"
) +
theme_minimal()
ggplotly(p, tooltip = "text")
p <- ggplot(data, aes(x = study_hours_per_day, y = sleep_hours,
color = exam_score,
text = paste("Score:", exam_score))) +
geom_point(size = 3) +
scale_color_gradient(colors=c("#1b9e77", "#f6f6bd", "#e66101")) # orange
p <- ggplot(data, aes(x = study_hours_per_day, y = sleep_hours,
color = exam_score,
text = paste("Score:", exam_score))) +
geom_point(size = 3) +
scale_color_gradient(colors=c("#1b9e77", "#f6f6bd", "#e66101")) # orange +
p <- ggplot(data, aes(x = study_hours_per_day, y = sleep_hours,
color = exam_score,
text = paste("Score:", exam_score))) +
geom_point(size = 3) +
scale_color_gradientn(colors = c("#1b9e77", "#f6f6bd", "#e66101")) +  # green → yellow → orange
labs(
title = "Interactive: Study & Sleep vs. Score",
x = "Study Hours",
y = "Sleep Hours"
) +
theme_minimal()
ggplotly(p, tooltip = "text")
p <- ggplot(data, aes(x = study_hours_per_day, y = sleep_hours,
color = exam_score,
text = paste("Score:", exam_score))) +
geom_point(size = 3) +
scale_color_gradientn(colors = c("#1b9e77", "#D5B60A", "#e66101")) +  # green → yellow → orange
labs(
title = "Interactive: Study & Sleep vs. Score",
x = "Study Hours",
y = "Sleep Hours"
) +
theme_minimal()
ggplotly(p, tooltip = "text")
p <- ggplot(data, aes(x = study_hours_per_day, y = sleep_hours,
color = exam_score,
text = paste("Score:", exam_score))) +
geom_point(size = 3) +
scale_color_gradientn(colors = c("#1b9e77", "#D5B60A", "#e66101")) +  # green → yellow → orange
labs(
title = "Interactive: Study & Sleep vs. Score",
x = "Study Hours",
y = "Sleep Hours"
) +
theme_minimal()
ggplotly(p, tooltip = "text")
